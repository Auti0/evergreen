name: release-it

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    types: [ closed ]
    branches: [ stable ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: [14.x]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: 'master'
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      
      - name: Install dependencies
        run: yarn 

      - name: git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          
      - run: yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  announce:
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      # To check the github context
      - name: Dump Github context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

      - id: fetch-latest-release
        uses: gregziegan/fetch-latest-release@v2.0.0
        with:
          github_token: ${{ github.token }}

      - name: Slack Markdown Converter
        id: slack-markdown-body
        uses: LoveToKnow/slackify-markdown-action@v1.0.0
        with:
          text: ${{toJSON(steps.fetch-latest-release.outputs.body)}}

      - name: Slack Notification on SUCCESS
        if: success()
        uses: tokorom/action-slack-incoming-webhook@main
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          text: A release is published.
          blocks: |
            [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "Continu API - ${{ steps.fetch-latest-release.outputs.tag_name}} deployed to Latest:smile:"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ${{ steps.slack-markdown-body.outputs.text }}
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "${{ steps.fetch-latest-release.outputs.html_url }}"
                }
              }
            ]    